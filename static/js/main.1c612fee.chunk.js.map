{"version":3,"sources":["assets/GC_logo.svg","assets/ITN_logo.svg","assets/shid_emozhl_logo.svg","assets/facts-slider/slide-1.jpg","assets/facts-slider/slide-2.jpg","assets/facts-slider/slide-3.jpg","assets/facts-slider/slide-4.jpg","assets/facts-slider/slide-5.jpg","assets/sectors/industry.jpg","assets/sectors/transport.jpg","assets/sectors/sity_planing.jpg","assets/sectors/energy.jpg","assets/sectors/energetics.jpg","assets/sectors/utilisation.jpg","components/HeroBlock/HeroBlock.js","components/Facts/SlideFacts.js","components/Facts/Facts.js","components/SectorsList/SectorItem.js","components/SectorsList/SectorsList.js","components/Footer/Footer.js","components/AirQuality/AirQuality.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HeroBlock","title","links","logosImages","logos","map","logoItem","index","key","src","alt","className","navItems","link","href","menuLink","useState","isClickBtn","setClickBtn","onClick","style","display","SlideFacts","item","imgUrl","desc","SwiperCore","use","Navigation","Pagination","Facts","factsSlides","slides","slideInfo","id","spaceBetween","slidesPerView","slidesPerGroup","navigation","nextEl","prevEl","pagination","el","clickable","renderBullet","SectorItem","sector","number","isToolTipShowing","setToolTipShowing","isDirectionSwitched","setDirectionSwitched","toggleToolTip","newValue","onMouseEnter","onMouseLeave","background","backgroundSize","name","description","SectorsList","subtitle","itemsList","items","i","Footer","type","htmlFor","mapboxgl","accessToken","AirQuality","mapContainer","useRef","lng","lat","zoom","locationInfo","useEffect","Map","container","current","center","ref","App","partners","shidLogo","IDMLogo","gcLogo","navLinks","require","sectors","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1c612fee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GC_logo.0662d9de.svg\";","module.exports = __webpack_public_path__ + \"static/media/ITN_logo.2f311a05.svg\";","module.exports = __webpack_public_path__ + \"static/media/shid_emozhl_logo.341a487c.svg\";","module.exports = __webpack_public_path__ + \"static/media/slide-1.7e1db0da.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-2.12a25e24.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-3.638ec227.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-4.8a21e8b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/slide-5.bb9f49bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/industry.61cc1648.jpg\";","module.exports = __webpack_public_path__ + \"static/media/transport.91feae3f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sity_planing.02cd1c72.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energy.f9eebf67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/energetics.cb7774c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/utilisation.3792da8d.jpg\";","import { render } from '@testing-library/react';\r\nimport React, { useState } from 'react';\r\nimport './HeroBlock.scss';\r\n\r\n\r\nconst HeroBlock = ({ title, links, logos }) => {\r\n    const logosImages = logos.map((logoItem, index) => (\r\n        <img key={index} src={logoItem} alt=\"partner-logo\" className=\"hero-partners-item\" />\r\n    ));\r\n    const navItems = links.map((link, index) => (\r\n        <a key={index} href={link.href} className=\"hero-navigation-item\">\r\n            {link.title}\r\n        </a>\r\n    ));\r\n    const menuLink = links.map((link, index) => (\r\n        <a key={index} href={link.href} className=\"hero-menu-link-item\">\r\n            {link.title}\r\n        </a>\r\n    ));\r\n    const [isClickBtn, setClickBtn] = useState(false);\r\n    // const [isClickBurger, setClickBurger] = useState(false);\r\n\r\n    const clickBurger = () => {\r\n        \r\n        isClickBtn ? setClickBtn(false) : setClickBtn(true);       \r\n        // isClickBurger ? setClickBurger(false) : setClickBurger(true);       \r\n    }\r\n\r\n    const closeBtn = () => {        \r\n        isClickBtn ? setClickBtn(false) : setClickBtn(true);       \r\n    }\r\n\r\n    \r\n    \r\n   \r\n\r\n    return (\r\n        <section className=\"hero\">\r\n            <div className=\"container\">\r\n                <div className=\"hero-burger-inner\">\r\n                    <div className=\"hero-burger-box\" onClick={clickBurger}>\r\n                        <div className=\"hero-burger-box-icon\" />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"hero-menu-inner\"\r\n                style={\r\n                    isClickBtn ? {display: `block`}: {display: `none`}}>\r\n                    <div className=\"hero-menu-button\" onClick = { closeBtn }>\r\n                    &times;\r\n                    </div>\r\n                    <nav className=\"hero-menu-links\">{menuLink}</nav>\r\n                    <p className=\"hero-menu-text\">2020, Все права защищены</p>\r\n                    <p className=\"hero-menu-text\">\r\n                        Согласие на обработку персональных данных<br />\r\n                        Политика конфиденциальности\r\n                    </p>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"hero-partners\">{logosImages}</div>\r\n                <nav className=\"hero-navigation\">{navItems}</nav>\r\n                <h1 className=\"hero-title\">{title}</h1>\r\n                <a href=\"#\" className=\"hero-link\">\r\n                    Отследить\r\n                </a>\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HeroBlock;\r\n","import React from 'react';\r\n\r\n\r\nconst SlideFacts = ({item}) => {\r\n  return (\r\n    <div className=\"facts-slide\">\r\n      <img src={item.imgUrl} alt=\"slideImg\"></img>\r\n      <p className=\"facts-slide-desc\">\r\n        {item.desc}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SlideFacts;","import React from 'react';\r\nimport SlideFacts from './SlideFacts';\r\nimport SwiperCore, { Navigation, Pagination } from 'swiper';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport './Facts.scss';\r\n\r\nSwiperCore.use([Navigation, Pagination]);\r\n\r\nconst Facts = ({ title, slides }) => {\r\n  const factsSlides = slides.map((slideInfo) => (\r\n    <SwiperSlide key={slideInfo.id}>\r\n      <SlideFacts item={slideInfo}/>\r\n    </SwiperSlide>\r\n  ));\r\n  return (\r\n    <section className=\"facts container\" id=\"facts\">\r\n      <h2 className=\"facts-title\">{title}</h2>\r\n      <div className=\"swiper-button-prev\" />\r\n      <Swiper\r\n        spaceBetween={40}\r\n        slidesPerView={3}\r\n        slidesPerGroup={3}\r\n        // loop={true}\r\n        // loopFillGroupWithBlank={true}\r\n        // centeredSlides={true}\r\n\r\n        navigation={{\r\n          nextEl: '.swiper-button-next',\r\n          prevEl: '.swiper-button-prev',\r\n        }}\r\n        pagination={{\r\n\t\t\t\t\tel: '.facts-pagination',\r\n\t\t\t\t\tclickable: true,\r\n\t\t\t\t\trenderBullet: function (index, className) {\r\n\t\t\t\t\t\treturn `<span class=\"facts-pagination-bullet ${className}\"></span>`;\r\n\t\t\t\t\t},\r\n        }}        \r\n      >\r\n        {factsSlides}\r\n      </Swiper>\r\n      <div className=\"swiper-button-next\" />\r\n      <div className=\"facts-pagination\" />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Facts;\r\n","import React, { useState } from 'react'\r\n\r\nconst SectorItem = ({ sector, number }) => {\r\n    const [isToolTipShowing, setToolTipShowing] = useState(false);\r\n    const [isDirectionSwitched, setDirectionSwitched] = useState(false)\r\n    const toggleToolTip = (newValue) => {\r\n        setDirectionSwitched(number % 3 === 0);\r\n        setToolTipShowing(newValue);\r\n    };\r\n\r\n\r\n    return (\r\n        <div\r\n            className=\"sectors-list-item\"\r\n            onMouseEnter={() => toggleToolTip(true)}\r\n            onMouseLeave={() => toggleToolTip(false)}\r\n            style={{\r\n                background: `url(${sector.imgUrl}) center no-repeat`,\r\n                backgroundSize: 'cover'\r\n            }}>\r\n\r\n            {\r\n                <p className={`sectors-list-item-name ${isToolTipShowing\r\n                    ? \"sectors-list-item-name-switched\"\r\n                    : \"\"\r\n                    }`}>\r\n                    {sector.name}\r\n                </p>\r\n            }\r\n\r\n            {\r\n                isToolTipShowing && <p className={`sectors-list-item-tooltip ${isDirectionSwitched\r\n                    ? \"sectors-list-item-tooltip-switched\"\r\n                    : \"\"\r\n                    }`}>\r\n                    {sector.description}\r\n                </p>\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default SectorItem;\r\n","import React from 'react'\r\nimport './SectorsList.scss';\r\nimport SectorItem from './SectorItem';\r\n\r\nconst SectorsList = ({ title, subtitle, items }) => {\r\n  const itemsList = items.map((sector, i) => \r\n  <SectorItem sector={sector} number={i+1} key={i} />)\r\n\r\n  return (\r\n    <section className=\"sectors container\" id=\"politics\">\r\n      <h2 className=\"sectors-title\">{title}</h2>\r\n      <p className=\"sectors-subtitle\">{subtitle}</p>\r\n      <div className=\"sectors-list\">        \r\n          {itemsList}        \r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SectorsList;\r\n","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = ({ logos, links }) => {    \r\n    const logosImages = logos.map((logoItem, index) => (\r\n        <img key={index} src={logoItem} alt=\"partner-logo\" className=\"footer-partners-item\" />\r\n    ));\r\n    const navItems = links.map((link, index) => (\r\n        <a key={index} href={link.href} className=\"footer-navigation-item\">\r\n            {link.title}\r\n        </a>\r\n    ));\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"footer-partners\">{logosImages}</div>\r\n                <div className=\"footer-inner\">\r\n                    <div className=\"footer-navigation\">{navItems}</div>\r\n                    <div className=\"footer-author\">\r\n                        Сайт был разработан<span> Сергеем Ильковым</span> в учебных целях, в рамках\r\n                        образовательной программы IT nation. Дизайн сайта создан\r\n                        <span> Валерией Бубырь.</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"footer-detailis\">\r\n                    <p className=\"footer-detailis-text\">2020, Все права защищены</p>\r\n                    <div className=\"footer-detailis-privacy\">\r\n                        <input type=\"checkbox\" id=\"privacy\" name=\"privacy\"/>\r\n                        <label htmlFor=\"privacy\">Согласие на обработку персональных данных</label>\r\n                    </div>                    \r\n                    <a className=\"footer-detailis-link\" href=\"#\">\r\n                    Политика конфиденциальности\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './AirQuality.scss';\r\n\r\nmapboxgl.accessToken =\r\n    'pk.eyJ1IjoiYnlndWR2aW4iLCJhIjoiY2tmbmh4cGplMDdicTJxcXo5c3RtM241YyJ9.ps7vNVnsaZ0qrUpQRdWEiA';\r\n\r\nconst AirQuality = () => {\r\n    const mapContainer = useRef(null);\r\n    const [locationInfo, setLocationInfo] = useState({\r\n        lng: 31,\r\n        lat: 48.3,\r\n        zoom: 5,\r\n    });\r\n    useEffect(() => {        \r\n        const map = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/outdoors-v11',\r\n            center: [locationInfo.lng, locationInfo.lat],\r\n            zoom: locationInfo.zoom,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <section className={'air-q container'} id=\"index\">\r\n            <h2 className=\"air-q-title\">Индекс качества воздуха в режиме реального времени</h2>\r\n            <div className=\"air-q-map\" ref={mapContainer} />\r\n            <p className=\"air-q-text\">Для того чтобы узнать уровень загрязнения атмосферного воздуха (качество воздуха) в городе Киев, необходимо выбрать соответствующую станцию мониторинга на карте выше.</p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AirQuality;\r\n","import React from 'react';\nimport './App.scss';\nimport HeroBlock from './components/HeroBlock/HeroBlock';\nimport Facts from './components/Facts/Facts';\nimport SectorsList from './components/SectorsList/SectorsList';\n\nimport Footer from './components/Footer/Footer';\nimport gcLogo from './assets/GC_logo.svg';\nimport IDMLogo from './assets/ITN_logo.svg';\nimport shidLogo from './assets/shid_emozhl_logo.svg';\nimport AirQuality from './components/AirQuality/AirQuality';\n\nfunction App() {\n    const partners = [shidLogo, IDMLogo, gcLogo];\n    const navLinks = [\n        {\n            title: 'Основные факты',\n            href: '#facts',\n        },\n        {\n            title: 'Индекс качества воздуха',\n            href: '#index',\n        },\n        {\n            title: 'Политика по уменьшению загрязнений',\n            href: '#politics',\n        },\n    ];\n    const factsSlides = [\n        {\n            id: '1332',\n            imgUrl: require('./assets/facts-slider/slide-1.jpg'),\n            desc: 'Женщины и дети – главные жертвы загрязнения воздуха',\n        },\n        {\n            id: '1333',\n            imgUrl: require('./assets/facts-slider/slide-2.jpg'),\n            desc: 'Защитники окружающей среды подвергаются преследованиям',\n        },\n        {\n            id: '1334',\n            imgUrl: require('./assets/facts-slider/slide-3.jpg'),\n            desc: 'Загрязнение воздуха – нарушение прав человека',\n        },\n        {\n            id: '1335',\n            imgUrl: require('./assets/facts-slider/slide-4.jpg'),\n            desc:\n                '4,2 миллиона случаев преждевременной смерти людей из-за загрязнения атмосферного воздуха',\n        },\n        {\n            id: '1336',\n            imgUrl: require('./assets/facts-slider/slide-5.jpg'),\n            desc:\n                'Согласно оценкам, суммарный объем затрат в связи с загрязнением воздуха превышает 5 трлн долл. в год.',\n        },\n    ];\n    const sectors = [\n        {\n            name: 'Промышленность',\n            imgUrl: require('./assets/sectors/industry.jpg'),\n            description:\n                'Чистые технологии, способствующие уменьшению выбросов из промышленных дымовых труб; улучшенная утилизация городских и сельскохозяйственных отходов, включая каптаж (улавливание) метана, выделяемого в местах утилизации отходов, в качестве варианта, альтернативного сжиганию (для использования в качестве биогаза)',\n        },\n        {\n            name: 'Транспорт',\n            imgUrl: require('./assets/sectors/transport.jpg'),\n            description:\n                'Переход к чистым способам выработки энергии; уделение приоритетного внимания скоростному городскому транспорту, пешеходным и велосипедным сетям в городах, а также железнодорожным междугородным грузовым и пассажирским перевозкам; переход к использованию более чистых большегрузных дизельных транспортных средств и автомобилей с низким уровнем выбросов, а также более чистых видов топлива, включая топливо со сниженной концентрацией серы',\n        },\n        {\n            name: 'Городское планирование',\n            imgUrl: require('./assets/sectors/sity_planing.jpg'),\n            description:\n                'Улучшение энергетической эффективности зданий и обеспечение более зеленых и компактных и тем самым более энергоэффективных городов',\n        },\n        {\n            name: 'Энергия',\n            imgUrl: require('./assets/sectors/energy.jpg'),\n            description:\n                'Обеспечение доступа к недорогостоящим источникам энергии в быту для приготовления пищи, отопления и освещения',\n        },\n        {\n            name: 'Энергетика',\n            imgUrl: require('./assets/sectors/energetics.jpg'),\n            description:\n                ' Более широкое использование видов топлива с низким уровнем выбросов и возобновляемых источников энергии, не основанных на сжигании (таких как энергия солнца, ветра или гидроэнергия); комбинированная выработка тепла и энергии; и распределенная выработка энергии (например, энергетические минисистемы и размещаемые на крыше установки для выработки энергии из солнечной энергии)',\n        },\n        {\n            name: 'Утилизация отходов',\n            imgUrl: require('./assets/sectors/utilisation.jpg'),\n            description:\n                'стратегии уменьшения отходов, сортировки отходов, рециклирования, повторного использования или переработки отходов; а также улучшенные методы биологической утилизации отходов, такие как анаэробная переработка отходов для производства биогаза, являются практически осуществимыми, недорогими альтернативными вариантами открытому сжиганию твердых отходов',\n        },\n    ];\n\n    return (\n        <>\n            <HeroBlock\n                title=\"Качество атмосферного воздуха и здоровье\"\n                logos={partners}\n                links={navLinks}\n            />\n            <Facts title=\"Основные факты\" slides={factsSlides} />\n            <AirQuality />\n            <SectorsList\n                title=\"Политика по уменьшению загрязнений\"\n                subtitle=\"Есть много примеров успешной политики по уменьшению загрязнения воздуха в таких секторах, как транспорт, городское планирование, энергетика и промышленность:\"\n                items={sectors}\n            />\n\n            <Footer logos={partners} links={navLinks} />\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}